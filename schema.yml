openapi: 3.0.3
info:
  title: Tiny Share API
  version: 2.0.0
  description: A simple file sharing API made with Django and Django Rest Framework.
paths:
  /api/add/:
    post:
      operationId: api_add_create
      description: Add two numbers
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Arithmetic'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Arithmetic'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Arithmetic'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Arithmetic'
          description: ''
  /api/divide/:
    post:
      operationId: api_divide_create
      description: Divide two numbers
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Arithmetic'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Arithmetic'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Arithmetic'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Arithmetic'
          description: ''
  /api/download/{id}/:
    get:
      operationId: api_download_retrieve
      description: Download a file using the file ID
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/login/:
    post:
      operationId: api_login_create
      description: Authenticate a user
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /api/multiply/:
    post:
      operationId: api_multiply_create
      description: Multiply two numbers
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Arithmetic'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Arithmetic'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Arithmetic'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Arithmetic'
          description: ''
  /api/refresh/:
    post:
      operationId: api_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/register/:
    post:
      operationId: api_register_create
      description: Create a new user
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/subtract/:
    post:
      operationId: api_subtract_create
      description: Subtract two numbers
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Arithmetic'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Arithmetic'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Arithmetic'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Arithmetic'
          description: ''
  /api/upload/:
    post:
      operationId: api_upload_create
      description: Upload a file
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/File'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/File'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/File'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
          description: ''
components:
  schemas:
    Arithmetic:
      type: object
      properties:
        num1:
          type: integer
        num2:
          type: integer
      required:
      - num1
      - num2
    File:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        file:
          type: string
          format: uri
        uploaded_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
          readOnly: true
      required:
      - file
      - id
      - uploaded_at
      - user
    Login:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - password
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          maxLength: 128
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
      required:
      - password
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
